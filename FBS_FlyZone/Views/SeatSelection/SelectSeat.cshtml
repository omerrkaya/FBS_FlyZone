@using EntityLayer.Concrete
@model List<FBS_FlyZone.Models.SeatSelectionModel>

@{
    ViewData["Title"] = "SelectSeat";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<div class="reservation-container" style="margin-top:130px;">
    <div class="reservation-header">
        <h2><i class="fas fa-plane"></i> Uçuş Rezervasyonu</h2>
    </div>

    <form action="ConfirmSeatSelection" method="post">
        <div class="reservation-steps">
            <input type="hidden" name="flightId" value="@Model.FirstOrDefault()?.FlightId" />
            <input type="hidden" name="ReservationId" />
            <input type="hidden" name="selectedSeats" id="selectedSeatsInput" />

            <div class="step active">
                <div class="step-number">1</div>
                <div class="step-title">Yolcu Bilgileri</div>
            </div>
            <div class="step">
                <div class="step-number">2</div>
                <div class="step-title">Koltuk Seçimi</div>
            </div>
            <div class="step">
                <div class="step-number">3</div>
                <div class="step-title">Ödeme</div>
            </div>
            <div class="step">
                <div class="step-number">4</div>
                <div class="step-title">Onay</div>
            </div>
        </div>
        <div class="seat-selection-container">
            <div class="airplane-cabin">
                <div class="cabin-header">
                    <div class="exit-sign">ÇIKIŞ</div>
                </div>
                <div class="seats-container" id="seatsContainer">
                    <!-- Koltuklar JavaScript ile dinamik olarak eklenecek -->
                </div>
            </div>
            <div class="seat-legend">
                <div class="legend-item">
                    <div class="seat-available"></div>
                    <span>Boş Koltuk</span>
                </div>
                <div class="legend-item">
                    <div class="seat-selected"></div>
                    <span>Seçilen Koltuk</span>
                </div>
                <div class="legend-item">
                    <div class="seat-occupied"></div>
                    <span>Dolu Koltuk</span>
                </div>
            </div>
        </div>

        <button type="submit" id="submitBtn" class="btn-submit">Seçimi Onayla</button>

    </form>
</div>

<style>
    .seat-selection-container {
        max-width: auto;
        padding: 3rem;
        background: linear-gradient(to right, #19232D, #3d3d3d);
        border-radius: 0px 0px 12px 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .airplane-cabin {
        background: linear-gradient(to right, #19232D, #3d3d3d);
        border-radius: 10px;
        padding: 20px;
        position: relative;
        margin-bottom: 2rem;
    }

    .cabin-header {
        text-align: center;
        margin-bottom: 20px;
    }

    .exit-sign {
        display: inline-block;
        background-color: #dcbb87;
        color: #19232D;
        padding: 5px 15px;
        border-radius: 4px;
        font-weight: bold;
        font-size: 0.9rem;
    }

    .seats-container {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .seat-row {
        display: flex;
        justify-content: center;
        gap: 15px;
    }

    .seat {
        width: 50px;
        height: 50px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.2s ease;
        position: relative;
    }

    .seat-available {
        background-color: #dcbb87;
        color: #19232D;
    }

    .seat-selected {
        background-color: #4CAF50;
        color: white;
    }

    .seat-occupied {
        background-color: #6d7b8c;
        color: white;
        cursor: not-allowed;
    }

    .aisle {
        width: 60px;
        background-color: transparent;
    }

    .seat:hover:not(.seat-occupied):not(.aisle) {
        transform: scale(1.05);
        box-shadow: 0 0 10px rgba(220, 187, 135, 0.7);
    }

    .seat-legend {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
    }

    .legend-item {
        color: var(--light-bg);
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .legend-item div {
            width: 20px;
            height: 20px;
            border-radius: 3px;
        }

    :root {
        --dark-primary: #19232D;
        --dark-secondary: #3d3d3d;
        --gold-accent: #dcbb87;
        --light-bg: #f5f2eb;
        --medium-gray: #6d7b8c;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: var( --dark-primary);
        color: var(--dark-primary);
    }

    .reservation-header {
        background: linear-gradient(to right, var( --dark-primary), var(--dark-secondary));
        color: #ffffff;
        padding: 2rem;
        text-align: center;
        border-bottom: 3px solid var(--gold-accent);
        border-radius: 12px 12px 0px 0px;
    }

        .reservation-header h2 {
            background: var(--gold-accent);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-weight: 700;
            text-shadow: none;
            display: inline-block;
            padding: 0 15px;
        }

    .reservation-steps {
        display: flex;
        justify-content: space-between;
        padding: 1.5rem 2rem;
        background: linear-gradient(to right, var(--dark-primary), var(--dark-secondary));
        position: relative;
    }

    .step {
        position: relative;
        z-index: 1;
        text-align: center;
        flex: 1;
    }

        .step.active .step-number {
            background: var(--gold-accent);
            color: var(--dark-primary);
            transform: scale(1.1);
            box-shadow: 0 0 0 3px rgba(220, 187, 135, 0.3);
        }

    .step-number {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: rgba(255,255,255,0.1);
        color: var(--gold-accent);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
        border: 2px solid var(--gold-accent);
    }

    .step-title {
        color: white;
        font-size: 0.85rem;
        font-weight: 500;
        opacity: 0.9;
    }

    .reservation-container {
        max-width: 900px;
        margin: 3rem auto;
        border-radius: 12px;
        overflow: visible;
        box-shadow: 0 15px 40px rgba(25, 35, 45, 0.15);
        background: white;
        border: 1px solid var(--gold-accent);
    }

    .btn-submit {
        background: linear-gradient(to right, var(--dark-primary), var(--dark-secondary));
        color: var(--gold-accent);
        border: none;
        padding: 1rem 2rem;
        font-weight: 600;
        letter-spacing: 1px;
        border: 2px solid var(--gold-accent);
        border-radius: 8px;
        transition: all 0.5s;
        margin-top: 1rem;
        width: 100%;
        text-transform: uppercase;
        font-size: 0.95rem;
    }

        .btn-submit:hover {
            border: 2px solid var(--medium-gray);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(61, 61, 61, 0.2);
            background: linear-gradient(to right, var(--dark-secondary), var(--dark-primary));
        }

    @@media (max-width: 768px) {
        .reservation-steps

    {
        background: var(--gold-accent);
        flex-direction: column;
        gap: 15px;
        padding: 1.5rem;
    }

    .step {
        display: flex;
        align-items: center;
        gap: 10px;
        text-align: left;
    }

    .step-number {
        margin-bottom: 0;
    }

    }
</style>

<script>


    document.addEventListener('DOMContentLoaded', function () {
        const seatsContainer = document.getElementById('seatsContainer');
        const totalRows = 25; // 4 koltuklu her sıra = 4*25 = 100 koltuk
        const seatLetters = ['A', 'B', 'C', 'D'];

        let selectedSeats = []; // Seçilen koltuklar burada tutulacak
        let occupiedSeats = []; // Bu arrayi backend'den dolu koltuk bilgisiyle doldurabilirsin

     
     
    occupiedSeats = @Html.Raw(Json.Serialize(Model.Where(x => x.IsOccupied).Select(x => x.SeatNumber).ToList()));


        // Koltukları oluştur
        for (let row = 1; row <= totalRows; row++) {
            const seatRow = document.createElement('div');
            seatRow.className = 'seat-row';

            for (let i = 0; i < seatLetters.length; i++) {
                const seat = document.createElement('div');
                const seatId = `${row}${seatLetters[i]}`;

                seat.className = occupiedSeats.includes(seatId) ? 'seat seat-occupied' : 'seat seat-available';
                seat.textContent = seatId;
                seat.setAttribute('data-seatId', seatId);

                seat.addEventListener('click', function () {
                    if (seat.classList.contains('seat-occupied')) return;

                    if (seat.classList.contains('seat-selected')) {
                        seat.classList.remove('seat-selected');
                        selectedSeats = selectedSeats.filter(s => s !== seatId);
                    } else {
                        if (selectedSeats.length < 3) {
                            seat.classList.add('seat-selected');
                            selectedSeats.push(seatId);
                        } else {
                            alert('En fazla 3 koltuk seçebilirsiniz.');
                        }
                    }
                    document.getElementById('selectedSeatsInput').value = selectedSeats.join(',');
                });
                if (i === 2) {
                    const aisle = document.createElement('div');
                    aisle.className = 'aisle';
                    seatRow.appendChild(aisle);
                }

                seatRow.appendChild(seat);
            }
            seatsContainer.appendChild(seatRow);
        }
    });
</script>
