@using EntityLayer.Concrete
@model List<Flight>
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/UserLayout.cshtml";
}



<div class="reservation-container" style="margin-top:130px;">
	<div class="reservation-header">
		<h2><i class="fas fa-plane"></i> Uçuş Rezervasyonu</h2>
	</div>

	<div class="reservation-steps">
		<div class="step active">
			<div class="step-number">1</div>
			<div class="step-title">Yolcu Bilgileri</div>
		</div>
		<div class="step">
			<div class="step-number">2</div>
			<div class="step-title">Koltuk Seçimi</div>
		</div>
		<div class="step">
			<div class="step-number">3</div>
			<div class="step-title">Ödeme</div>
		</div>
		<div class="step">
			<div class="step-number">4</div>
			<div class="step-title">Onay</div>
		</div>
	</div>
	<div class="seat-selection-container">
		<div class="airplane-cabin">
			<div class="cabin-header">
				<div class="exit-sign">ÇIKIŞ</div>
			</div>
			<div class="seats-container" id="seatsContainer">
				<!-- Koltuklar JavaScript ile dinamik olarak eklenecek -->
			</div>
		</div>
		<div class="seat-legend">
			<div class="legend-item">
				<div class="seat-available"></div>
				<span>Boş Koltuk</span>
			</div>
			<div class="legend-item">
				<div class="seat-selected"></div>
				<span>Seçilen Koltuk</span>
			</div>
			<div class="legend-item">
				<div class="seat-occupied"></div>
				<span>Dolu Koltuk</span>
			</div>
		</div>
	</div>

</div>

<style>
	.seat-selection-container {
		max-width: auto;
		padding: 3rem;
		background: linear-gradient(to right, #19232D, #3d3d3d);
		border-radius: 12px;
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
	}

	.airplane-cabin {
		background: linear-gradient(to right, #19232D, #3d3d3d);
		border-radius: 10px;
		padding: 20px;
		position: relative;
		margin-bottom: 2rem;
	}

	.cabin-header {
		text-align: center;
		margin-bottom: 20px;
	}

	.exit-sign {
		display: inline-block;
		background-color: #dcbb87;
		color: #19232D;
		padding: 5px 15px;
		border-radius: 4px;
		font-weight: bold;
		font-size: 0.9rem;
	}

	.seats-container {
		display: flex;
		flex-direction: column;
		gap: 15px;
	}

	.seat-row {
		display: flex;
		justify-content: center;
		gap: 15px;
	}

	.seat {
		width: 50px;
		height: 50px;
		border-radius: 4px;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		font-weight: bold;
		transition: all 0.2s ease;
		position: relative;
	}

	.seat-available {
		background-color: #dcbb87;
		color: #19232D;
	}

	.seat-selected {
		background-color: #4CAF50;
		color: white;
	}

	.seat-occupied {
		background-color: #6d7b8c;
		color: white;
		cursor: not-allowed;
	}

	.aisle {
		width: 60px;
		background-color: transparent;
	}

	.seat:hover:not(.seat-occupied):not(.aisle) {
		transform: scale(1.05);
		box-shadow: 0 0 10px rgba(220, 187, 135, 0.7);
	}

	.seat-legend {
		display: flex;
		justify-content: center;
		gap: 20px;
		margin-top: 20px;
	}

	.legend-item {
		color: var(--light-bg);
		display: flex;
		align-items: center;
		gap: 8px;
	}

		.legend-item div {
			width: 20px;
			height: 20px;
			border-radius: 3px;
		}

	:root {
		--dark-primary: #19232D; /* Ana koyu */
		--dark-secondary: #3d3d3d; /* İkincil koyu */
		--gold-accent: #dcbb87; /* Altın vurgu */
		--light-bg: #f5f2eb; /* Krem-altın tonu arkaplan */
		--medium-gray: #6d7b8c; /* Ara ton */
	}

	body {
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		background-color: var( --dark-primary);
		color: var(--dark-primary);
	}

	/* HEADER FIX */
	.reservation-header {
		background: linear-gradient(to right, var( --dark-primary), var(--dark-secondary));
		color: #ffffff;
		padding: 2rem;
		text-align: center;
		border-bottom: 3px solid var(--gold-accent);
		border-radius: 12px 12px 0px 0px;
	}

		.reservation-header h2 {
			background: var(--gold-accent);
			-webkit-background-clip: text;
			background-clip: text;
			color: transparent;
			font-weight: 700;
			text-shadow: none;
			display: inline-block;
			padding: 0 15px;
		}

		/* Kenarlık efekti eklemek isterseniz */
		.reservation-header h2 {
			position: relative;
		}

			.reservation-header h2::after {
				content: "";
				position: absolute;
				bottom: -5px;
				left: 15%;
				width: 70%;
				height: 2px;
				background: linear-gradient(90deg, transparent, #dcbb87, transparent);
			}

	/* STEPS FIX */
	.reservation-steps {
		display: flex;
		justify-content: space-between;
		padding: 1.5rem 2rem;
		background: linear-gradient(to right, var(--dark-primary), var(--dark-secondary));
		position: relative;
	}

		.reservation-steps::after {
			content: '';
			position: absolute;
			bottom: 0;
			left: 0;
			right: 0;
			height: 3px;
			background: var(--gold-accent);
		}

	.step {
		position: relative;
		z-index: 1;
		text-align: center;
		flex: 1;
	}

		.step.active .step-number {
			background: var(--gold-accent);
			color: var(--dark-primary);
			transform: scale(1.1);
			box-shadow: 0 0 0 3px rgba(220, 187, 135, 0.3);
		}

	.step-number {
		width: 36px;
		height: 36px;
		border-radius: 50%;
		background: rgba(255,255,255,0.1);
		color: var(--gold-accent);
		display: inline-flex;
		align-items: center;
		justify-content: center;
		font-weight: bold;
		margin-bottom: 0.5rem;
		transition: all 0.3s ease;
		border: 2px solid var(--gold-accent);
	}

	.step-title {
		color: white;
		font-size: 0.85rem;
		font-weight: 500;
		opacity: 0.9;
	}

	/* CONTAINER */
	.reservation-container {
		max-width: 900px;
		margin: 3rem auto;
		border-radius: 12px;
		overflow: visible;
		box-shadow: 0 15px 40px rgba(25, 35, 45, 0.15);
		background: white;
		border: 1px solid var(--gold-accent);
	}

	/* FORM */
	.reservation-form {
		padding: 3rem;
		background: linear-gradient(to right, var(--dark-primary), var(--dark-secondary));
		color: var(--gold-accent);
		border-radius: 0px 0px 12px 12px;
	}

	.section-title {
		color: var(--gold-accent);
		border-left: 4px solid var(--gold-accent);
		padding-left: 1rem;
		margin: 2rem 0 1.5rem;
		font-size: 1.3rem;
		display: flex;
		align-items: center;
		gap: 10px;
	}

		.section-title i {
			color: var(--gold-accent);
		}

	.form-control, .form-select {
		padding: 0.8rem 1rem;
		border-radius: 8px;
		border: 1px solid #ced4da;
		transition: all 0.3s;
	}

		.form-control:focus, .form-select:focus {
			border-color: var(--accent-color);
			box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
		}


	.nice-select .current {
		color: #1a1a1a;
		display: flex;
		align-items: center;
		justify-content: center;
		height: 42px;
	}

	.nice-select {
		color: var(--gold-accent);
		border-radius: 8px;
		border: 1px solid #ced4da;
		padding: 0.8rem 1rem;
		width: 60%;
		text-align: center;
		display: flex;
		align-items: center;
	}

	.btn-submit {
		background: linear-gradient(to right, var(--dark-primary), var(--dark-secondary));
		color: var(--gold-accent);
		border: none;
		padding: 1rem 2rem;
		font-weight: 600;
		letter-spacing: 1px;
		border: 2px solid var(--gold-accent);
		border-radius: 8px;
		transition: all 0.5s;
		margin-top: 1rem;
		width: 100%;
		text-transform: uppercase;
		font-size: 0.95rem;
	}

		.btn-submit:hover {
			border: 2px solid var(--medium-gray);
			transform: translateY(-2px);
			box-shadow: 0 5px 15px rgba(61, 61, 61, 0.2);
			background: linear-gradient(to right, var(--dark-secondary), var(--dark-primary));
		}

	@@media (max-width: 768px) {
		.reservation-steps {
			background: var(--gold-accent);
			flex-direction: column;
			gap: 15px;
			padding: 1.5rem;
		}

		.step {
			display: flex;
			align-items: center;
			gap: 10px;
			text-align: left;
		}

		.step-number {
			margin-bottom: 0;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const seatsContainer = document.getElementById('seatsContainer');
		const totalRows = 20; // Toplam sıra sayısı (dinamik olarak değiştirilebilir)

		// Koltuk harf dizilimi (A-B boşluk C-D boşluk E-F)
		const seatLetters = ['A', 'B', 'C', 'D', 'E', 'F'];

		// Rastgele dolu koltuklar oluştur (demo amaçlı)
		const occupiedSeats = new Set();
		for (let i = 0; i < totalRows * 2; i++) {
			const randomRow = Math.floor(Math.random() * totalRows) + 1;
			const randomLetter = seatLetters[Math.floor(Math.random() * seatLetters.length)];
			occupiedSeats.add(`${randomRow}${randomLetter}`);
		}

		// Koltukları oluştur
		for (let row = 1; row <= totalRows; row++) {
			const seatRow = document.createElement('div');
			seatRow.className = 'seat-row';

			// Koltukları ekle (6 koltuk, 2 boşluk)
			for (let i = 0; i < seatLetters.length; i++) {
				const seat = document.createElement('div');
				const seatId = `${row}${seatLetters[i]}`;

				seat.className = occupiedSeats.has(seatId) ? 'seat seat-occupied' : 'seat seat-available';
				seat.textContent = seatId;
				seat.dataset.seatId = seatId;

				seat.addEventListener('click', function() {
					if (!occupiedSeats.has(seatId)) {
						seat.classList.toggle('seat-selected');
					}
				});

				seatRow.appendChild(seat);

				// 2. ve 4. koltuktan sonra boşluk ekle
				if (i === 1 || i === 3) {
					const aisle = document.createElement('div');
					aisle.className = 'aisle';
					seatRow.appendChild(aisle);
				}
			}

			seatsContainer.appendChild(seatRow);
		}
	});
</script>